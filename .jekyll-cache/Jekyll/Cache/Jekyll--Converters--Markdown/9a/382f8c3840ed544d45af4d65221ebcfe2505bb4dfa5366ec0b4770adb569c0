I"ì<h3 id="ongoing-research-projects">Ongoing Research Projects</h3>

<p>Here are the research projects that we received fundings and are currently working on:</p>

<table>
<col width="200px" />
<col width="600px" />
<tr>
  <th>Project</th>
  <th>Description</th>
</tr>
<tr>
  <td>Software Engineering for Data Science
  <i>Apirak, Morakot, Chaiyong, Thanwadee, Siripen<br />(Early Research Career - Ministry of Higher Education, Science, Research and Innovation)</i>
  </td>
  <td></td>
</tr>
<tr>
  <td>Development of Deep Learning-Based Models for Learning Vector Representation of Iterative Software Development<br /><i>Morakot Choetkiertikul <br />(Early Research Career - Ministry of Higher Education, Science, Research and Innovation)</i></td>
  <td>This research project proposes an approach to develop a predictive
model that can make predictions regarding the team's productivity and work quality delivered at
the end of iterations. Specifically, this research focuses on the model that can predict not only the
amount of work in terms of a number of issues resolving from an iteration but also the risk of
quality impact in terms of reopened issues. Those issues that are reopened after resolved within
an iteration have been shown to potentially cause a negative impact on a project as it requires
extra costs (e.g., budget, time, and effort) for reworking. In addition, our approach aims to
use not only task-related information but also team-related information, such as developer
activities, to characterize iterations. This is because an iteration usually consists of several types of information such as task description, developer assignment, source code, and iteration plan, such
as task sequences. In this research, we aim to investigate whether employing advanced deep
learning techniques (e.g., Long-Short Term Memory) to automatically learn a vector
representation of a software iteration that can yield high accuracy in prediction tasks. Specifically,
several deep learning architectures can eliminate manual feature engineering processes and have
demonstrated ground-breaking performance in many applications such as machine translation,
video analysis, and speed recognition.</td>
</tr>
<tr>
  <td>Code similarity applications for improving software quality<br /><i>Chaiyong Ragkhitwetsagul <br />(Early Research Career - Ministry of Higher Education, Science, Research and Innovation)</i></td>
  <td>This research project aims to propose a novel approach to improve software by using code similarity techniques and create an automated tool for detecting similar code and giving relevant recommendations. The projects will leverage code similarity in order to tackle several issues that lead to low- quality software. For example, by measuring code similarity, one can locate duplicated pieces of code, i.e., code clones, within a software project or across software projects, and properly refactor them. This results in lower amount of redundant code in the software, hence easier to maintain. It can also avoid software licensing violations caused by code reuse and can also recommend software developers on how to write code that are well-accepted by the community. We plan to study and adopt suitable machine learning techniques for code similarity computations and will evaluate its effectiveness. Lastly, we plan to also deploy the tool to be used by developers and evaluate its usefulness and its impact in practice.
  </td>
</tr>
<tr>
  <td><a href="https://muict-seru.github.io/ASETSI/">Automated Software Engineering for Thailand's Software Industry (ASETSI)</a>
  <br />
  <i>Chaiyong, Morakot, Thanwadee<br />
  IAPP18-19\74 (Newton Fund) Royal Academy of Engineering, UK<br />[Extended to Nov 2022]</i></td>
  <td>
  This project aims to study the challenges Thai software development SMEs currently face and train them to adopt ASE to tackle such challenges, the quality and quantity of software products developed in Thailand will be tremendously increased.
  This project provides benefits to both the UK and the Thai partners. First, it provides knowledge transfer of ASE expertise from the UK to improve the capabilities of Thailand software companies. Second, the project enables the UK researchers to study the productivity gain through applying ASE techniques into SMEs. The project will include a series of training/hands-on workshop sessions held in Thailand on topics surrounding ASE with the trainers/facilitators from both the UK and Thai partners. This project is an important milestone to establish further UK-Thailand software engineering research collaboration.
  </td>
</tr>
</table>

<hr />

<h3 id="potential-research-projects">Potential Research Projects</h3>

<p>Listed below are the potential research topics we plan to work on. Please feel free to contact us if youâ€™re interested!</p>

<table>
<col width="200px" />
<col width="600px" />
<tr>
  <th>Project</th>
  <th>Description</th>
</tr>
<tr>
  <td>Code clone detection using coding style</td>
  <td>Base on the naturalness of software, it might be possible that a programmer's coding style can be an indicator of code copying and pasting. This project aims to investigate the potential application of applying coding style detection to code clone detection problem. One has to work on finding a technique to identify coding style of a given software project, and then detect the newly submitted patch to see if the code conforms to the project's coding style.</td>
</tr>
<tr>
  <td>Backlog grooming support model</td>
  <td>We aim to develop an approach to support the backlog grooming activities in Agile development, for example, user story splitting, trimming backlog, and user story classification.</td>
</tr>
<tr>
  <td>Automated testing for 3D games</td>
  <td>Testing framework for games is still under-explored. We aim to facilitate the tedious task of game testing by developing automated testing techniques specifically for 3D games. There is a possibility to adopt search-based testing techniques (e.g., multi-objective genetic algorithm) successfully applied to traditional software on games.</td>
</tr>
<tr>
  <td>Automated software license identification using deep learning techniques</td>
  <td>This project focuses on training a deep learning model to predict software license based on its license text. The benefits of the project include the analysis of software licenses on GitHub and automatic detection of software license conflicts.</td>
</tr>
<tr>
  <td>ISO29110 vs Agile development</td>
  <td>ISO29110 is a software development process standard for a very small entity (i.e., a small development team). This project aims to explore the relationships between the standard and Agile methodology in order to develop a guidance for Agile teams who want to adopt ISO29110.</td>
</tr>
<tr>
  <td>Understanding how Agile teams estimate story points</td>
  <td>Story points is a popular effort estimation unit used by Agile teams. Teams use story points to reflect effort, complexity, and difficulty of a software development task. Estimating story points is mostly based on experts. It is team-based estimation (e.g., 2-story point may reflect different size of tasks between 2 Agile teams ). We would like to understand the common nature in story point estimation. The ultimate goal is that we aim to develop an prescriptive (explainable) story point estimation model. </td>
</tr>
<tr>
  <td>Virtual reality-based software visualisation</td>
  <td>We are interested in exploring an application of the VR technology to visualise software projects and to help programmers understand their software better.</td>
</tr>
</table>
:ET